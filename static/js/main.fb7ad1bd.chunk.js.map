{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","pressedKey","wasSomethingPressed","handleKeyUp","event","setState","key","document","addEventListener","this","removeEventListener","className","React","Component","ReactDOM","render","getElementById"],"mappings":"oNAOaA,EAAb,4MACEC,MAAQ,CACNC,WAAY,0BACZC,qBAAqB,GAHzB,EAcEC,YAAc,SAACC,GACb,EAAKC,SAAS,CACZJ,WAAYG,EAAME,IAClBJ,qBAAqB,KAjB3B,uDAME,WACEK,SAASC,iBAAiB,QAASC,KAAKN,eAP5C,kCAUE,WACEI,SAASG,oBAAoB,QAASD,KAAKN,eAX/C,oBAqBE,WACE,MAA4CM,KAAKT,MAAzCC,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,oBAEpB,OACE,qBAAKS,UAAU,MAAf,SACE,mBAAGA,UAAU,eAAb,SACGT,EAAmB,mCACYD,EADZ,KAEhBA,UA7Bd,GAAyBW,IAAMC,W,MCF/BC,IAASC,OACP,cAAC,EAAD,IACAR,SAASS,eAAe,W","file":"static/js/main.fb7ad1bd.chunk.js","sourcesContent":["import React from 'react';\n\ntype State = {\n  pressedKey: string;\n  wasSomethingPressed: boolean;\n};\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    pressedKey: 'Nothing was pressed yet',\n    wasSomethingPressed: false,\n  };\n\n  componentDidMount(): void {\n    document.addEventListener('keyup', this.handleKeyUp);\n  }\n\n  componentWillUnmount(): void {\n    document.removeEventListener('keyup', this.handleKeyUp);\n  }\n\n  handleKeyUp = (event: KeyboardEvent): void => {\n    this.setState({\n      pressedKey: event.key,\n      wasSomethingPressed: true,\n    });\n  };\n\n  render() {\n    const { pressedKey, wasSomethingPressed } = this.state;\n\n    return (\n      <div className=\"App\">\n        <p className=\"App__message\">\n          {wasSomethingPressed\n            ? `The last pressed key is [${pressedKey}]`\n            : pressedKey}\n        </p>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}